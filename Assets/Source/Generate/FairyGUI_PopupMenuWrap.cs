//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class FairyGUI_PopupMenuWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(FairyGUI.PopupMenu), typeof(System.Object));
		L.RegFunction("AddItem", AddItem);
		L.RegFunction("AddItemAt", AddItemAt);
		L.RegFunction("AddSeperator", AddSeperator);
		L.RegFunction("GetItemName", GetItemName);
		L.RegFunction("SetItemText", SetItemText);
		L.RegFunction("SetItemVisible", SetItemVisible);
		L.RegFunction("SetItemGrayed", SetItemGrayed);
		L.RegFunction("SetItemCheckable", SetItemCheckable);
		L.RegFunction("SetItemChecked", SetItemChecked);
		L.RegFunction("isItemChecked", isItemChecked);
		L.RegFunction("RemoveItem", RemoveItem);
		L.RegFunction("ClearItems", ClearItems);
		L.RegFunction("Dispose", Dispose);
		L.RegFunction("Show", Show);
		L.RegFunction("New", _CreateFairyGUI_PopupMenu);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("itemCount", get_itemCount, null);
		L.RegVar("contentPane", get_contentPane, null);
		L.RegVar("list", get_list, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateFairyGUI_PopupMenu(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				FairyGUI.PopupMenu obj = new FairyGUI.PopupMenu();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else if (count == 1 && TypeChecker.CheckTypes(L, 1, typeof(string)))
			{
				string arg0 = ToLua.CheckString(L, 1);
				FairyGUI.PopupMenu obj = new FairyGUI.PopupMenu(arg0);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: FairyGUI.PopupMenu.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddItem(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 3 && TypeChecker.CheckTypes(L, 1, typeof(FairyGUI.PopupMenu), typeof(string), typeof(FairyGUI.EventCallback1)))
			{
				FairyGUI.PopupMenu obj = (FairyGUI.PopupMenu)ToLua.ToObject(L, 1);
				string arg0 = ToLua.ToString(L, 2);
				FairyGUI.EventCallback1 arg1 = null;
				LuaTypes funcType3 = LuaDLL.lua_type(L, 3);

				if (funcType3 != LuaTypes.LUA_TFUNCTION)
				{
					 arg1 = (FairyGUI.EventCallback1)ToLua.ToObject(L, 3);
				}
				else
				{
					LuaFunction func = ToLua.ToLuaFunction(L, 3);
					arg1 = DelegateFactory.CreateDelegate(typeof(FairyGUI.EventCallback1), func) as FairyGUI.EventCallback1;
				}

				FairyGUI.GButton o = obj.AddItem(arg0, arg1);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 3 && TypeChecker.CheckTypes(L, 1, typeof(FairyGUI.PopupMenu), typeof(string), typeof(FairyGUI.EventCallback0)))
			{
				FairyGUI.PopupMenu obj = (FairyGUI.PopupMenu)ToLua.ToObject(L, 1);
				string arg0 = ToLua.ToString(L, 2);
				FairyGUI.EventCallback0 arg1 = null;
				LuaTypes funcType3 = LuaDLL.lua_type(L, 3);

				if (funcType3 != LuaTypes.LUA_TFUNCTION)
				{
					 arg1 = (FairyGUI.EventCallback0)ToLua.ToObject(L, 3);
				}
				else
				{
					LuaFunction func = ToLua.ToLuaFunction(L, 3);
					arg1 = DelegateFactory.CreateDelegate(typeof(FairyGUI.EventCallback0), func) as FairyGUI.EventCallback0;
				}

				FairyGUI.GButton o = obj.AddItem(arg0, arg1);
				ToLua.PushObject(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: FairyGUI.PopupMenu.AddItem");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddItemAt(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 4 && TypeChecker.CheckTypes(L, 1, typeof(FairyGUI.PopupMenu), typeof(string), typeof(int), typeof(FairyGUI.EventCallback1)))
			{
				FairyGUI.PopupMenu obj = (FairyGUI.PopupMenu)ToLua.ToObject(L, 1);
				string arg0 = ToLua.ToString(L, 2);
				int arg1 = (int)LuaDLL.lua_tonumber(L, 3);
				FairyGUI.EventCallback1 arg2 = null;
				LuaTypes funcType4 = LuaDLL.lua_type(L, 4);

				if (funcType4 != LuaTypes.LUA_TFUNCTION)
				{
					 arg2 = (FairyGUI.EventCallback1)ToLua.ToObject(L, 4);
				}
				else
				{
					LuaFunction func = ToLua.ToLuaFunction(L, 4);
					arg2 = DelegateFactory.CreateDelegate(typeof(FairyGUI.EventCallback1), func) as FairyGUI.EventCallback1;
				}

				FairyGUI.GButton o = obj.AddItemAt(arg0, arg1, arg2);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 4 && TypeChecker.CheckTypes(L, 1, typeof(FairyGUI.PopupMenu), typeof(string), typeof(int), typeof(FairyGUI.EventCallback0)))
			{
				FairyGUI.PopupMenu obj = (FairyGUI.PopupMenu)ToLua.ToObject(L, 1);
				string arg0 = ToLua.ToString(L, 2);
				int arg1 = (int)LuaDLL.lua_tonumber(L, 3);
				FairyGUI.EventCallback0 arg2 = null;
				LuaTypes funcType4 = LuaDLL.lua_type(L, 4);

				if (funcType4 != LuaTypes.LUA_TFUNCTION)
				{
					 arg2 = (FairyGUI.EventCallback0)ToLua.ToObject(L, 4);
				}
				else
				{
					LuaFunction func = ToLua.ToLuaFunction(L, 4);
					arg2 = DelegateFactory.CreateDelegate(typeof(FairyGUI.EventCallback0), func) as FairyGUI.EventCallback0;
				}

				FairyGUI.GButton o = obj.AddItemAt(arg0, arg1, arg2);
				ToLua.PushObject(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: FairyGUI.PopupMenu.AddItemAt");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddSeperator(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			FairyGUI.PopupMenu obj = (FairyGUI.PopupMenu)ToLua.CheckObject(L, 1, typeof(FairyGUI.PopupMenu));
			obj.AddSeperator();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetItemName(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			FairyGUI.PopupMenu obj = (FairyGUI.PopupMenu)ToLua.CheckObject(L, 1, typeof(FairyGUI.PopupMenu));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			string o = obj.GetItemName(arg0);
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetItemText(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			FairyGUI.PopupMenu obj = (FairyGUI.PopupMenu)ToLua.CheckObject(L, 1, typeof(FairyGUI.PopupMenu));
			string arg0 = ToLua.CheckString(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			obj.SetItemText(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetItemVisible(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			FairyGUI.PopupMenu obj = (FairyGUI.PopupMenu)ToLua.CheckObject(L, 1, typeof(FairyGUI.PopupMenu));
			string arg0 = ToLua.CheckString(L, 2);
			bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
			obj.SetItemVisible(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetItemGrayed(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			FairyGUI.PopupMenu obj = (FairyGUI.PopupMenu)ToLua.CheckObject(L, 1, typeof(FairyGUI.PopupMenu));
			string arg0 = ToLua.CheckString(L, 2);
			bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
			obj.SetItemGrayed(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetItemCheckable(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			FairyGUI.PopupMenu obj = (FairyGUI.PopupMenu)ToLua.CheckObject(L, 1, typeof(FairyGUI.PopupMenu));
			string arg0 = ToLua.CheckString(L, 2);
			bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
			obj.SetItemCheckable(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetItemChecked(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			FairyGUI.PopupMenu obj = (FairyGUI.PopupMenu)ToLua.CheckObject(L, 1, typeof(FairyGUI.PopupMenu));
			string arg0 = ToLua.CheckString(L, 2);
			bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
			obj.SetItemChecked(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int isItemChecked(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			FairyGUI.PopupMenu obj = (FairyGUI.PopupMenu)ToLua.CheckObject(L, 1, typeof(FairyGUI.PopupMenu));
			string arg0 = ToLua.CheckString(L, 2);
			bool o = obj.isItemChecked(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveItem(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			FairyGUI.PopupMenu obj = (FairyGUI.PopupMenu)ToLua.CheckObject(L, 1, typeof(FairyGUI.PopupMenu));
			string arg0 = ToLua.CheckString(L, 2);
			bool o = obj.RemoveItem(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ClearItems(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			FairyGUI.PopupMenu obj = (FairyGUI.PopupMenu)ToLua.CheckObject(L, 1, typeof(FairyGUI.PopupMenu));
			obj.ClearItems();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Dispose(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			FairyGUI.PopupMenu obj = (FairyGUI.PopupMenu)ToLua.CheckObject(L, 1, typeof(FairyGUI.PopupMenu));
			obj.Dispose();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Show(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1 && TypeChecker.CheckTypes(L, 1, typeof(FairyGUI.PopupMenu)))
			{
				FairyGUI.PopupMenu obj = (FairyGUI.PopupMenu)ToLua.ToObject(L, 1);
				obj.Show();
				return 0;
			}
			else if (count == 3 && TypeChecker.CheckTypes(L, 1, typeof(FairyGUI.PopupMenu), typeof(FairyGUI.GObject), typeof(object)))
			{
				FairyGUI.PopupMenu obj = (FairyGUI.PopupMenu)ToLua.ToObject(L, 1);
				FairyGUI.GObject arg0 = (FairyGUI.GObject)ToLua.ToObject(L, 2);
				object arg1 = ToLua.ToVarObject(L, 3);
				obj.Show(arg0, arg1);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: FairyGUI.PopupMenu.Show");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_itemCount(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.PopupMenu obj = (FairyGUI.PopupMenu)o;
			int ret = obj.itemCount;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index itemCount on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_contentPane(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.PopupMenu obj = (FairyGUI.PopupMenu)o;
			FairyGUI.GComponent ret = obj.contentPane;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index contentPane on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_list(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.PopupMenu obj = (FairyGUI.PopupMenu)o;
			FairyGUI.GList ret = obj.list;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index list on a nil value" : e.Message);
		}
	}
}

